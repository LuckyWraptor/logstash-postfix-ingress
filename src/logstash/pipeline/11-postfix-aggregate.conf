# Version: 1.0.0
# Author: whyscream, LuckyWraptor
#
# Aggregate configuration, to combine queue information from multiple log entries into a more comprehensive entry.
#

filter {
  # Ensure only the succeeded entries are being included in aggregation
  if "_grok_postfix_success" in [tags] and [postfix][queueid] {
    if [program] == "postfix/qmgr" and [postfix][from] {
      aggregate {
        task_id => "%{[postfix][queueid]}"
        code => "
          map['[postfix][from]'] = event.get('[postfix][from]')
          map['[postfix][size]'] = event.get('[postfix][size]')
          map['[postfix][nrcpt]'] = event.get('[postfix][nrcpt]')
        "
      }
    } else if [program] == "postfix/smtpd"
      or ([program] == "smtpd" and [postfix][queueid]) {
      aggregate {
        task_id => "%{[postfix][queueid]}"
        code => "
          map['[postfix][client][hostname]'] = event.get('[postfix][client][hostname]')
          map['[postfix][client][ip]'] = event.get('[postfix][client][ip]')
        "
      }
    } else if [program] == "postfix/cleanup" {
      aggregate {
        task_id => "%{[postfix][queueid]}"
        code => "
          messageid = event.get('[postfix][messageid]')
          if (messageid != nil)
            map['[postfix][messageid]'] = messageid
          end
        "
      }
    } else if [program] == "postfix/smtp" or [program] == "postfix/relay/smtp"
      or ([program] == "smtp" and [postfix][queueid]) {
      aggregate {
        task_id => "%{[postfix][queueid]}"
        code => "
          map.each do |key, value|
            event.set(key, value)
          end
        "
      }
    }
  }
}